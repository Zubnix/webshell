include mime.types;
types {
    application/wasm wasm;
}

server {
    listen 80;
    server_name  webshell;

    root /www/data/webshell;

    gzip on;
    gzip_types text/css application/javascript application/json image/svg+xml;
    gzip_comp_level 9;
    etag on;

    location / {
      try_files $uri $uri/ /index.html =404;
    }

    location /static/ {
      add_header Cache-Control max-age=31536000;
    }

    location /index.html {
      add_header Cache-Control no-cache;
    }

    location /upload {
        limit_except POST              { deny all; }
        client_body_temp_path          /tmp/upload;
        client_body_in_file_only       on;
        client_body_buffer_size        128K;
        client_max_body_size           100M;
        proxy_pass_request_headers     on;
        proxy_set_header               X-TEMP-FILE-NAME $request_body_file;
        proxy_set_body                 off;
        proxy_pass                     http://localhost:81;
        proxy_set_header               Host webshell.local;
        proxy_redirect                 off;
    }
}

server {
        listen 81;
        server_name webshell.local;
        access_log off;

        location /upload {
                default_type 'text/plain';
                content_by_lua_block {
                    local tmpFileName = ngx.req.get_headers()["X-TEMP-FILE-NAME"]
                    local fileName = ngx.req.get_headers()["X-ORIG-FILE-NAME"]
                    os.execute('mv -f ' .. tmpFileName .. " /upload/" .. fileName)
                }
        }
}
